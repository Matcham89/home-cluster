---
# yaml-language-server: $schema=https://github.com/fluxcd-community/flux2-schemas/raw/main/ocirepository-source-v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  ref:
    tag: 78.3.0
  url: oci://ghcr.io/prometheus-community/charts/kube-prometheus-stack
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: prometheus
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  install:
    crds: Create
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 3
  values:
    # Prometheus configuration
    prometheus:
      prometheusSpec:
        retention: 7d
        retentionSize: "10GB"
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 20Gi
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            memory: 2Gi
        # Enable service monitors for all namespaces
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false

    # Grafana configuration
    grafana:
      enabled: true
      adminPassword: "admin"
      persistence:
        enabled: true
        size: 5Gi
      resources:
        requests:
          cpu: 100m
          memory: 256Mi
        limits:
          memory: 512Mi
      # Grafana service - expose via LoadBalancer
      service:
        type: LoadBalancer
      # Enable default dashboards
      defaultDashboardsEnabled: true

    # Alertmanager configuration
    alertmanager:
      enabled: true
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 5Gi
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            memory: 256Mi

    # kube-state-metrics configuration
    kube-state-metrics:
      enabled: true
      resources:
        requests:
          cpu: 10m
          memory: 64Mi
        limits:
          memory: 128Mi

    # prometheus-node-exporter configuration
    prometheus-node-exporter:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
        limits:
          memory: 128Mi

    # Disable components we don't need for basic monitoring
    kubeEtcd:
      enabled: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeProxy:
      enabled: false
